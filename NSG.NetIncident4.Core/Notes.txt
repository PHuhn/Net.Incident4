https://www.c-sharpcorner.com/article/authentication-and-authorization-in-asp-net-5-with-jwt-and-swagger/
ASP.NET Core Web API (project template)
Clean Architecture:
	https://github.com/jasontaylordev/NorthwindTraders
CQRS stands for command query responsibility segregation

For external login of the Web-API:...
In the secrets.json store:
	in "Authentication:Google", the generated Google's "ClientId" and "ClientSecret".
	in "Authentication:Microsoft", the generated Microsoft Account's "ClientId" and "ClientSecret".
See project file: <UserSecretsId>aspnet-NSG.NetIncident4.Core-7565303C-46F5-41FE-B2C2-5A0FF48FFEB3</UserSecretsId>
located: C:\Users\Phil\AppData\Roaming\Microsoft\UserSecrets\aspnet-NSG.NetIncident4.Core-7565303C-46F5-41FE-B2C2-5A0FF48FFEB3
Note: this does not allow login to the Angular app.

Packages:
	Install-Package Microsoft.EntityFrameworkCore.SqlServer -version 5.0.12
	Install-Package Microsoft.EntityFrameworkCore.Tools -version 5.0.12
	Install-Package Microsoft.AspNetCore.Identity.EntityFrameworkCore -version 5.0.12
	Install-Package Microsoft.AspNetCore.Identity -version 2.2.0
	Install-Package Microsoft.AspNetCore.Authentication.JwtBearer -version 5.0.12
	- Swashbuckle.AspNetCore (5.6.3) came with the project -
	Install-Package MediatR
	Install-Package MediatR.Extensions.Microsoft.DependencyInjection -Version 9.0.0
	9.0.0
	Install-Package FluentValidation.AspNetCore
	10.3.4
	Install-Package OdeToCode.AddFeatureFolders
	Install-Package MimeKit
	2.15.1
	Install-Package Microsoft.AspNetCore.Identity.UI -version 5.0.12
	Install-Package bootstrap
	Install-Package Microsoft.Identity.Web.UI
	(1.21.0)
	Install-Package Microsoft.EntityFrameworkCore.Relational -version 5.0.12

	Install-package Microsoft.AspNetCore.Authentication.Google -version 6.0.8
	Install-package Microsoft.AspNetCore.Authentication.MicrosoftAccount -version 6.0.8

	Install-Package System.ServiceModel.Syndication -Version 6.0.0
	Install-Package Microsoft.SyndicationFeed.ReaderWriter -Version 1.0.2

	install-package jquery
	bootstrap

	Click on the project and select add, then add a scaffolding item and select Identity
		Override all, select DB Context.

Create db:
	https://weblog.west-wind.com/posts/2016/jan/13/resetting-entity-framework-migrations-to-a-clean-slate
	Issue with MS's implementation of SQLite in an update of migration...
	*	Remove the _MigrationHistory table from the Database
	*	Remove the individual migration files in your project's Migrations folder
	*	Add-migration Initial in PMC
	*	Comment out the code inside of the Up method in the Initial Migration
	*	Update-database in PMC (does nothing but creates Migration Entry)
	*	Remove comments in the Initial method

	add-migration Initial
	update-database
	Add-Migration "Update-2021-11-27-11-30"
	Update-Database

	Add-Migration "Update-2023-02-24-11-52"
	Update-Database

	on 2023-02-25 ...
	Add-Migration Initial -verbose
	Update-Database -verbose
	Remove-Migration -verbose

==============================================================================
==============================================================================
PROBLEM:
	Unable to resolve service for type 'Microsoft.AspNetCore.Session.ISessionStore' while attempting to activate 'Microsoft.AspNetCore.Session.SessionMiddleware'.
SOLUTION:
	services.AddSession(options => {
		options.Cookie.IsEssential = true;
	});

PROBLEM:
	InvalidOperationException: Unable to resolve service for type 'NSG.NetIncident4.Core.Infrastructure.Notification.INotificationService' while attempting to activate 'NSG.NetIncident4.Core.UI.Controllers.HomeController'.
	Microsoft.Extensions.DependencyInjection.ActivatorUtilities.GetService(IServiceProvider sp, Type type, Type requiredBy, bool isDefaultParameterRequired)
SOLUTION:
	services.AddSingleton<INotificationService, NotificationService>();
	services.AddSingleton<IEmailSender, NotificationService>();

PROBLEM:
	Access to XMLHttpRequest at 'https://localhost:44362/api/Authenticate/Login' from
	origin 'http://localhost:4200' has been blocked by CORS policy: No 'Access-Control-Allow-Origin' header is present on the requested resource.
SOLUTION:
		services.AddCors(options => {
			options.AddPolicy("CorsAnyOrigin", builder => {
				builder
					.WithOrigins("http://localhost:4200,http://localhost:10111")
					.AllowAnyOrigin()
					.AllowAnyHeader()
					.AllowAnyMethod();
			});
		});

		app.UseCors("CorsAnyOrigin");

PROBLEM:
	In Angular:
	HttpErrorResponse {headers: HttpHeaders, status: 415, statusText: 'OK', url: 'https://localhost:44362/api/Authenticate/Login', ok: false, …}
		error: status: 415, title: "Unsupported Media Type"
SOLUTION:
	Changed from:
	const options = { headers: new HttpHeaders().set( 'Content-Type', 'application/x-www-form-urlencoded' ) };
	to:
	const options = { headers: new HttpHeaders().set( 'Content-Type', 'application/json' ) };
 
PROBLEM:
	Tryig to display signon form:
	No webpage was found for the web address: Account/SignIn?area= "MicrosoftIdentity"
SOLUTION:
	services.AddControllersWithViews(options =>
	{
		var policy = new AuthorizationPolicyBuilder()
			.RequireAuthenticatedUser()
			.Build();
	}).AddMicrosoftIdentityUI();

PROBLEM:
	Connection failed in IIS
SOLUTION:
	In IIS Management console: click on Authentication icon,
	then disable all except Anonymous Authentication,
	then r-click Anonymous Authentication and select Edit,
	in Edit form select radio button of 'Application pool identity'.
	Set the the permissions in the Application pool on the 'Advanced Settings',
	set the Identity options to LocalSystem or your preference.

	In Sql Server SSMS: in query window select the DB and execute the following,
	USE [master]
	GO
	IF NOT EXISTS(SELECT name FROM [master].[sys].[syslogins] WHERE NAME = 'NT AUTHORITY\SYSTEM')
	BEGIN 
		PRINT 'Create'
		CREATE LOGIN [NT AUTHORITY\SYSTEM] FROM WINDOWS WITH DEFAULT_DATABASE=[master], DEFAULT_LANGUAGE=[us_english]
	END
	GO
	IF NOT EXISTS(SELECT name FROM [master].[sys].[syslogins] WHERE NAME = 'NT AUTHORITY\LOCAL SERVICE')
	BEGIN 
		PRINT 'Create NT AUTHORITY\LOCAL SERVICE'
		CREATE LOGIN [NT AUTHORITY\LOCAL SERVICE] FROM WINDOWS WITH DEFAULT_DATABASE=[master], DEFAULT_LANGUAGE=[us_english]
	END
	GO
	IF NOT EXISTS(SELECT name FROM [master].[sys].[syslogins] WHERE NAME = 'NT AUTHORITY\NETWORK SERVICE')
	BEGIN 
		PRINT 'Create NT AUTHORITY\NETWORK SERVICE'
		CREATE LOGIN [NT AUTHORITY\NETWORK SERVICE] FROM WINDOWS WITH DEFAULT_DATABASE=[master], DEFAULT_LANGUAGE=[us_english]
	END
	GO

	USE [NetIncidentIdentity04]
	GO
	CREATE USER [NT AUTHORITY\SYSTEM] FOR LOGIN [NT AUTHORITY\SYSTEM] WITH DEFAULT_SCHEMA=[dbo]
	GO
	CREATE USER [NT AUTHORITY\NETWORK SERVICE] FOR LOGIN [NT AUTHORITY\NETWORK SERVICE] WITH DEFAULT_SCHEMA=[dbo]
	GO
	CREATE USER [NT AUTHORITY\LOCAL SERVICE] FOR LOGIN [NT AUTHORITY\LOCAL SERVICE] WITH DEFAULT_SCHEMA=[dbo]
	GO
	ALTER ROLE [db_datareader] ADD MEMBER [NT AUTHORITY\SYSTEM]
	GO
	ALTER ROLE [db_datawriter] ADD MEMBER [NT AUTHORITY\SYSTEM]
	GO
	ALTER ROLE [db_datareader] ADD MEMBER [NT AUTHORITY\NETWORK SERVICE]
	GO
	ALTER ROLE [db_datawriter] ADD MEMBER [NT AUTHORITY\NETWORK SERVICE]
	GO
	ALTER ROLE [db_datareader] ADD MEMBER [NT AUTHORITY\LOCAL SERVICE]
	GO
	ALTER ROLE [db_datawriter] ADD MEMBER [NT AUTHORITY\LOCAL SERVICE]
	GO

PROBLEM:
	Only in the published site, from the Angular application (after the login):
		Access to XMLHttpRequest at 'https://localhost:9114/api/Incidents/' from origin 
		'http://localhost:4200' has been blocked by CORS policy: No
		'Access-Control-Allow-Origin' header is present on the requested resource.
SOLUTION:
	https://docs.microsoft.com/en-us/aspnet/core/fundamentals/middleware/?view=aspnetcore-6.0#middleware-order
	In the Startup.cs 'public virtual void Configure' method, use order:
		ExceptionHandler / Hsts / HttpsRedirection / StaticFiles / CookiePolicy /
		Routing / RequestLocalization / Cors / Authentication / Authorization /
		Session / ResponseCompression / ResponseCaching / ...custom... / Endpoint

PROBLEM (2022-07-10):
	InvalidOperationException: The relationship from 'IncidentNote.NoteType' to 
	'NoteType.IncidentNotes' with foreign key properties {'IncidentNoteId' : long} cannot
	target the primary key {'NoteTypeId' : int} because it is not compatible. Configure a
	principal key or a set of foreign key properties with compatible types for this relationship.
SOLUTION:
	incorrect OnModelCreating configuration in NoteTypeConfiguration:
			builder.HasMany(nt => nt.IncidentNotes)
				.WithOne(n => n.NoteType)
				.HasForeignKey(nt => nt.IncidentNoteId)
				.OnDelete(DeleteBehavior.Restrict)
				.HasConstraintName("FK_IncidentNote_NoteType_NoteTypeId");
	to:
			builder.HasMany(nt => nt.IncidentNotes)
				.WithOne(n => n.NoteType)
				.HasForeignKey(nt => nt.NoteTypeId)
				.OnDelete(DeleteBehavior.Restrict)
				.HasConstraintName("FK_IncidentNote_NoteType_NoteTypeId");

PROBLEM:
	Your connection is not private
	Attackers might be trying to steal your information from localhost (for example, passwords, messages, or credit cards). Learn more
	NET::ERR_CERT_DATE_INVALID

SOLUTION:
	MMC => Add Certificate => click root => Action => Find .. LocalHost
	RClick => delete the out-of-date cert
	Now I get NET::ERR_CERT_AUTHORITY_INVALID
		Open IIS Manager as Admin
		Select Local Machine (Colony7) from the Connection tree
		Select "Server Certificate" from the IIS section
		Select "Create Self-Signed Certificate" (on right)
		Assign a Freindly Name to the certificate
		Click OK
		Restart IIS
		Now I get ERR_CONNECTION_RESET
			> cd "C:\Program Files (x86)\IIS Express"
			> IisExpressAdminCmd.exe setupsslUrl -url:https://localhost:9114/ -UseSelfSigned
			Now I get NET::ERR_CERT_AUTHORITY_INVALID (in IIS Manager it said,
			the certificate was not trusted,
			is said to install it into Trusted Root Certificates)

PROBLEM:
 	 ApplicationDbContext_DuplicateCreateCompany_Test
   	   Source: ApplicationDbContext_UnitTests.cs line 122
		Microsoft.Data.Sqlite.SqliteException : SQLite Error 1: 'AUTOINCREMENT is only allowed on an INTEGER PRIMARY KEY'.
	fail: Microsoft.EntityFrameworkCore.Database.Command[20102]
		  Failed executing DbCommand (2ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
		  CREATE TABLE "IncidentNote" (
			  "IncidentNoteId" bigint NOT NULL CONSTRAINT "PK_IncidentNote" PRIMARY KEY AUTOINCREMENT,
			  ...
		  );

SOLUTION:
	Change the entity as follows:
		[Key, DatabaseGenerated(DatabaseGeneratedOption.Identity)]
		[Required(ErrorMessage = "IncidentNoteId is required.")]
		public long IncidentNoteId { get; set; }

		info: Microsoft.EntityFrameworkCore.Database.Command[20101]
			Executed DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
		CREATE TABLE "IncidentNote" (
			"IncidentNoteId" INTEGER NOT NULL CONSTRAINT "PK_IncidentNote" PRIMARY KEY AUTOINCREMENT,
			"NoteTypeId" int NOT NULL,
			"Note" TEXT NOT NULL,
			"CreatedDate" datetime2 NOT NULL,
			CONSTRAINT "FK_IncidentNote_NoteType_NoteTypeId" FOREIGN KEY ("NoteTypeId") REFERENCES "NoteType" ("NoteTypeId") ON DELETE RESTRICT
		);

	Change the EntityTypeBuilder to not use
		item.HasKey(i => i.IncidentNoteId);
		//item.Property(i => i.IncidentNoteId)
		//	.IsRequired()
		//	.HasColumnName("IncidentNoteId")
		//	.HasColumnType("bigint");


PROBLEM:
	Date:	2023-03-02
	Failed executing DbCommand (0ms) [Parameters=[], CommandType='Text', CommandTimeout='30']
	CREATE TABLE [AspNetRoleClaims] (
		[Id] int NOT NULL IDENTITY,
		[RoleId] nvarchar(450) NOT NULL,
		[ClaimType] nvarchar(1073741823) NULL,
		[ClaimValue] nvarchar(1073741823) NULL,
		CONSTRAINT [PK_AspNetRoleClaims] PRIMARY KEY ([Id])
	);
	Error Number:131,State:2,Class:15
	The size (1073741823) given to the column 'ClaimType' exceeds the maximum allowed for any data type (8000).

SOLUTION:
	Date:	2023-03-02
	Changed from:
		public void Configure(EntityTypeBuilder<IdentityRoleClaim<string>> builder)
		{
			builder.ToTable("AspNetRoleClaims");
			// propteries
			builder.HasKey(a => a.Id);
			builder.Property(a => a.RoleId)
				.IsRequired()
				.HasMaxLength(450)
				.HasColumnName("RoleId")
				.HasColumnType("nvarchar");
			builder.Property(a => a.ClaimType)
				.HasMaxLength(1073741823)
				.HasColumnName("ClaimType")
				.HasColumnType("nvarchar");
			builder.Property(a => a.ClaimValue)
				.HasMaxLength(1073741823)
				.HasColumnName("ClaimValue")
				.HasColumnType("nvarchar");
			// indexes
			builder.HasIndex(a => a.RoleId)
				.HasDatabaseName("IX_AspNetRoleClaims_RoleId");
			// relationships
		} // Configure
	Changed to:
		public void Configure(EntityTypeBuilder<IdentityRoleClaim<string>> builder)
		{
			builder.ToTable("AspNetRoleClaims");
			// propteries
			builder.HasKey(a => a.Id);
			builder.Property(a => a.RoleId)
				.IsRequired()
				.HasMaxLength(450)
				.HasColumnName("RoleId")
				.HasColumnType("nvarchar");
			// indexes
			builder.HasIndex(a => a.RoleId)
				.HasDatabaseName("IX_AspNetRoleClaims_RoleId");
			// relationships
		} // Configure


PROBLEM:
	Upgrade to .Net 7	(2023-10-28)

SOLUTION:
	Updated Visual Studio in Visual Studio Installer
	In the project ...
		<TargetFramework>net7.0</TargetFramework>
	...
	<ItemGroup Condition="'$(TargetFramework)' == 'net7.0'">
		<PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="7.0.13" />
		<PackageReference Include="Microsoft.AspNetCore.Authentication.OpenIdConnect" Version="7.0.13" />
		<PackageReference Include="Microsoft.AspNetCore.Identity.EntityFrameworkCore" Version="7.0.13" />
		<PackageReference Include="Microsoft.AspNetCore.Identity.UI" Version="7.0.13" />
		<PackageReference Include="Microsoft.EntityFrameworkCore.Relational" Version="7.0.13" />
		<PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="7.0.13" />
		<PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="7.0.13">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
		<PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="7.0.11" />
		<PackageReference Include="Microsoft.AspNetCore.TestHost" Version="7.0.13" />
		<PackageReference Include="Microsoft.AspNetCore.Authentication.Google" Version="7.0.13" />
		<PackageReference Include="Microsoft.AspNetCore.Authentication.MicrosoftAccount" Version="7.0.13" />
	</ItemGroup>

	Install-package Microsoft.AspNetCore.Authentication.JwtBearer -version 7.0.13
	Install-package Microsoft.AspNetCore.Authentication.OpenIdConnect -version 7.0.13
	Install-package Microsoft.AspNetCore.Identity.EntityFrameworkCore -version 7.0.13
	Install-package Microsoft.AspNetCore.Identity.UI -version 7.0.13
	Install-package Microsoft.EntityFrameworkCore.Relational -version 7.0.13
	Install-package Microsoft.EntityFrameworkCore.SqlServer -version 7.0.13
	Install-package Microsoft.EntityFrameworkCore.Tools -version 7.0.13
	Install-package Microsoft.VisualStudio.Web.CodeGeneration.Design -version 7.0.11
	Install-package Microsoft.AspNetCore.TestHost -version 7.0.13
	Install-package Microsoft.AspNetCore.Authentication.Google -version 7.0.13
	Install-package Microsoft.AspNetCore.Authentication.MicrosoftAccount -version 7.0.13
	In test:
	Install-package Microsoft.EntityFrameworkCore.InMemory -version 7.0.13
	Install-package Microsoft.EntityFrameworkCore.SqLite -version 7.0.13
	Install-package Microsoft.Extensions.Logging -version 7.0.0

========
PROBLEM:
	Win32Exception: The certificate chain was issued by an authority that is not trusted.
	Unknown location
	SqlException: A connection was successfully established with the server, but then an error occurred during the login process. (provider: SSL Provider, error: 0 - The certificate chain was issued by an authority that is not trusted.)
	Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, bool breakConnection, Action<Action> wrapCloseInAction)

SOLUTION:
	Add Encrypt=False to the connectionString

========
PROBLEM:
	Main menu _Layout.chtml dropdown items not working.

SOLUTION:
	Changed data-toggle= to data-bs-toggle= for main menu anchor tags
	V7.4.2.11

========
PROBLEM:
	Support 'light' and 'dark' themes.

SOLUTION:
	Got updated Cosmo theme from boot-watch
	V7.4.2.12

========
PROBLEM:
	The 1-to-many links not expanding the detail data.

SOLUTION:
	Changed data-toggle= to data-bs-toggle= and data-target= to data-bs-target=
	Fixes the problem, but one can also add the follow classes:
	accordion-item, accordion-header, accordion-button, accordion-collapse, accordion-body

========
PROBLEM:
	.Net 7.0

SOLUTION:
	https://stackoverflow.com/questions/68987057/how-to-do-integration-testing-for-net-6-web-api-projects-using-webapplicationfa
	dotnet new webapi --force
	which lost all of these packages:
	Install-Package Microsoft.AspNetCore.Authentication.JwtBearer -Version 7.0.15
	Install-Package Microsoft.AspNetCore.Authentication.Google -Version 7.0.15
	Install-Package Microsoft.AspNetCore.Authentication.MicrosoftAccount -Version 7.0.15
	Install-package Microsoft.AspNetCore.Identity.UI -version 7.0.15
	Install-package Microsoft.AspNetCore.Identity.EntityFrameworkCore -version 7.0.15
	Install-Package Microsoft.AspNetCore.OpenApi -version 7.0.15
	Install-Package Microsoft.SyndicationFeed.ReaderWriter -Version 1.0.2
	Install-Package Microsoft.EntityFrameworkCore.SqlServer -version 7.0.15
	Install-Package Microsoft.EntityFrameworkCore.Tools -Version 7.0.15
	Install-Package Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore -version 7.0.15
	Install-Package Microsoft.IdentityModel.Tokens -Version 7.2.0
	Install-package System.IdentityModel.Tokens.Jwt -version 7.0.15
	Install-Package MediatR -Version 12.2.0
	Install-Package FluentValidation.AspNetCore -Version 11.3.0
	Install-Package System.ServiceModel.Syndication -Version 7.0.0

	services.AddMediatR(cfg => cfg.RegisterServicesFromAssembly(Assembly.GetExecutingAssembly()));
	Restored appsettings.json
	Restored part of .csproj
	<PropertyGroup>
		<TargetFramework>net7.0</TargetFramework>
		<Nullable>enable</Nullable>
		<ImplicitUsings>enable</ImplicitUsings>
		<UserSecretsId>aspnet-NSG.NetIncident4.Core-7565303C-46F5-41FE-B2C2-5A0FF48FFEB3</UserSecretsId>
		<!-- Version <core>.<major>.<minor>.<build> -->
		<Version>7.4.2.13</Version>
		<Copyright>Copyright © 2024</Copyright>
		<Company>Phillip N. Huhn, DBA Northern Software Group</Company>
		<Authors>Phil Huhn (NSG)</Authors>
		<Description>Backend and administration to Network Incident</Description>
		<Product>Network Incident Backend</Product>
		<InvariantGlobalization>false</InvariantGlobalization>
	</PropertyGroup>

========
PROBLEM:
	System.InvalidOperationException: 'A suitable constructor for type
	'Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware' could not
	be located. Ensure the type is concrete and services are registered
	for all parameters of a public constructor.'

SOLUTION:
	app.UseCors(startup.corsNamedOriginPolicy);
	Passed a null

========
PROBLEM:
	CultureNotFoundException: Only the invariant culture is supported in globalization-invariant mode.

SOLUTION:
	In .cproj file change from:
	<InvariantGlobalization>true</InvariantGlobalization>
	to:
	<InvariantGlobalization>false</InvariantGlobalization>

========
PROBLEM:
	console-log.service.ts:112 Error: Auth-Service.baseSrvcErrorHandler: 
	 {"headers":{"normalizedNames":{},"lazyUpdate":null},"status":500,"statusText":"OK","url":"https://localhost:44398/api/Authenticate/Login/","ok":false,"name":
	 "HttpErrorResponse","message":"Http failure response for https://localhost:44398/api/Authenticate/Login/: 500 OK",
	 "error":"System.TypeInitializationException: The type initializer for 'System.IdentityModel.Tokens.Jwt.JsonExtensions' threw an exception.\r\n --->
	 System.TypeLoadException: Could not load type 'Microsoft.IdentityModel.Json.JsonConvert'
	 from assembly 'Microsoft.IdentityModel.Tokens
	or:
	 Could not load type 'Microsoft.IdentityModel.Json.JsonConvert' from assembly 'Microsoft.IdentityModel.Tokens

SOLUTION:
	Install-package System.IdentityModel.Tokens.Jwt -version 7.0.15

========
PROBLEM:
	Microsoft.EntityFrameworkCore.Update: Error: An exception occurred in the database while saving changes for context type 'NSG.NetIncident4.Core.Persistence.ApplicationDbContext'.
	Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
	 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): The INSERT statement conflicted with the FOREIGN KEY constraint "FK_Servers_Companies_CompanyId". The conflict occurred in database "NetIncidentIdentity04", table "dbo.Companies", column 'CompanyId'.
	   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
	   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
	   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
	   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
	   at Microsoft.Data.SqlClient.SqlDataReader.TryHasMoreRows(Boolean& moreRows)
	   at Microsoft.Data.SqlClient.SqlDataReader.TryReadInternal(Boolean setTimeout, Boolean& more)
	   at Microsoft.Data.SqlClient.SqlDataReader.ReadAsyncExecute(Task task, Object state)
	   at Microsoft.Data.SqlClient.SqlDataReader.InvokeAsyncCall[T](SqlDataReaderBaseAsyncCallContext`1 context)
	--- End of stack trace from previous location ---
	   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSetAsync(Int32 startCommandIndex, RelationalDataReader reader, CancellationToken cancellationToken)
	   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeAsync(RelationalDataReader reader, CancellationToken cancellationToken)
	ClientConnectionId:792372cb-9048-4533-9f43-3878898d5b35
	Error Number:547,State:0,Class:16
	   --- End of inner exception stack trace ---
	   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeAsync(RelationalDataReader reader, CancellationToken cancellationToken)
	   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
	   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
	   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
	   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
	   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
	   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
	   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
	   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)	   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
	   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)

SOLUTION:
	Duplicate removed from CompanyConfiguration.cs
			builder.HasMany(s => s.Servers)
				.WithOne(c => c.Company)
				.HasForeignKey(s => s.ServerId)
				.OnDelete(DeleteBehavior.Restrict)
				.HasConstraintName("FK_Servers_Companies_CompanyId");

	Install-Package Microsoft.AspNetCore.OpenApi -version 7.0.15
	Install-Package Microsoft.EntityFrameworkCore.Tools -Version 7.0.15
	> dotnet tool update --global dotnet-ef --version 7.0.15
	> dotnet tool update dotnet-ef --version 7.0.15
	> dotnet ef migrations add Initial
	> dotnet ef database update

	remove C# 8 assignments in Incident class from:
		//
		public NIC NIC { get; set; } = new NIC();
		public Server Server { get; set; } = new Server();
	to:
		//
		public NIC NIC { get; set; }
		public Server Server { get; set; }

========
PROBLEM:
	System.TypeInitializationException: The type initializer for 'System.IdentityModel.Tokens.Jwt.JsonExtensions' threw an exception.
	 ---> System.TypeLoadException: Could not load type 'Microsoft.IdentityModel.Json.JsonConvert' from assembly 'Microsoft.IdentityModel.Tokens, Version=7.2.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.
	   at System.IdentityModel.Tokens.Jwt.JsonExtensions..cctor()
	   --- End of inner exception stack trace ---
	   at System.IdentityModel.Tokens.Jwt.JsonExtensions.get_Serializer()
	   at System.IdentityModel.Tokens.Jwt.JsonExtensions.SerializeToJson(Object value)
	   at System.IdentityModel.Tokens.Jwt.JwtPayload.SerializeToJson()
	   at System.IdentityModel.Tokens.Jwt.JwtPayload.Base64UrlEncode()
	   at System.IdentityModel.Tokens.Jwt.JwtSecurityToken.get_EncodedPayload()
	   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.WriteToken(SecurityToken token)
	   at NSG.NetIncident4.Core.UI.Api.AuthenticateController.Login(LoginModel model) in C:\Dat\Nsg\L\Web\22\Net.Incident4.backup7\NSG.NetIncident4.Core\UI\Api\AuthenticateController.cs:line 80
	   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
	   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
	   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
	   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
	   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
	   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
	   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|25_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
	   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)
	   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
	   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
	   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
	   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Awaited|17_0(ResourceInvoker invoker, Task task, IDisposable scope)
	   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
	   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
	   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
	   at Microsoft.AspNetCore.Session.SessionMiddleware.Invoke(HttpContext context)
	   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
	   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
	   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
	Exception thrown: 'System.ObjectDisposedException' in System.Private.CoreLib.dll

SOLUTION:
	https://stackoverflow.com/questions/77120928/why-do-i-get-idx20803-error-after-upgrading-to-identitymodel-v7-from-v6
	UnInstall-Package Microsoft.IdentityModel.Tokens
	Install-Package Microsoft.IdentityModel.Tokens -Version 7.2.0
	Install-Package Microsoft.IdentityModel.Protocols.OpenIdConnect -version 7.0.15

========
PROBLEM:
	System.InvalidOperationException
	  HResult=0x80131509
	  Message=Scheme already exists: Identity.Application
	  Source=Microsoft.AspNetCore.Authentication.Abstractions
	  StackTrace:
	   at Microsoft.AspNetCore.Authentication.AuthenticationOptions.AddScheme(String name, Action`1 configureBuilder)
	   at Microsoft.Extensions.Options.OptionsFactory`1.Create(String name)
	   at Microsoft.Extensions.Options.UnnamedOptionsManager`1.get_Value()
	   at Microsoft.AspNetCore.Authentication.AuthenticationSchemeProvider..ctor(IOptions`1 options, IDictionary`2 schemes)
	   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
	   at System.Reflection.ConstructorInvoker.Invoke(Object obj, IntPtr* args, BindingFlags invokeAttr)
	   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
	   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
	   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
	   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite callSite, RuntimeResolverContext context)
	   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
	   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
	   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
	   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitRootCache(ServiceCallSite callSite, RuntimeResolverContext context)
	   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
	   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
	   at Microsoft.Extensions.DependencyInjection.ServiceProvider.CreateServiceAccessor(Type serviceType)
	   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
	   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
	   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
	   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
	   at Microsoft.AspNetCore.Builder.WebApplication.get_ServerFeatures()
	   at Microsoft.AspNetCore.Builder.WebApplication..ctor(IHost host)
	   at Microsoft.AspNetCore.Builder.WebApplicationBuilder.Build()
	   at Program.<Main>$(String[] args) in C:\Dat\Nsg\L\Web\22\Net.Incident4\NSG.NetIncident4.Core\Program.cs:line 40

SOLUTION:
	commented out the following:
		startup.ConfigureSqlContextIdentity(builder.Services);
	appearently UI/Identity/IdentityHostingStartup is being called

========
PROBLEM:
	Upgrade from .Net 7.0 to 8.0

SOLUTION:
	2024-02-29
	Updated Visual Studio which update SDK to 8.0.2.  Converted vesions from
	7.0.15 to 8.0.2
	Compiled => installed packages that were missing, also in tests
	Had to fix NSG.MockHelpers.cs in tests project.  I had to change call to
	'new PropertyCounts' in DbSetAddAsync method.
	All tests passed and the website ran and Angular updated a record..

========
PROBLEM:
	Feature to toggle between light and dark bootstrap themes

SOLUTION:
	V8.4.2.15
	Added font awesome
	Added wwwroot/js/switch-theme.js
	Added toggle icon button to _Layout.chtml

========
PROBLEM:
	Toggle light and dark feature is not retained when going to new page.

SOLUTION:
	V8.4.2.16
	Corrected wwwroot/js/switch-theme.js and site.js

========
PROBLEM:


SOLUTION:


